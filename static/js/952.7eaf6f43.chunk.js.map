{"version":3,"file":"static/js/952.7eaf6f43.chunk.js","mappings":"4LAGaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CAAcC,EAAAA,GAAQC,EAAAA,GAASC,EAAAA,GAAOC,EAAAA,G,8ICD5CC,EAAOL,EAAAA,GAAAA,GAAH,sBAEJM,EAAWN,EAAAA,GAAAA,GAAH,4HAKA,SAAAO,GAAC,OAAIA,EAAEC,MAAML,MAAM,EAAlB,IAITM,EAAcT,EAAAA,GAAAA,IAAH,0DAKXU,EAAYV,EAAAA,GAAAA,EAAH,2CACP,SAAAO,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,QAAtB,I,SCfHC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEjBC,EAAkB,SAACC,GACrB,OAAqB,OAAjBA,EACM,kCAAN,OAAyCA,GAElC,yFAEd,EAED,OACI,SAACX,EAAD,UACKS,EAAKG,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,UAAWJ,EAAvB,EAAuBA,aAAvB,OAEN,UAACV,EAAD,YACI,SAACG,EAAD,CAAaY,IAAKN,EAAgBC,GAAeM,QAAQ,UACzD,UAACvB,EAAA,EAAD,CAAKwB,GAAI,EAAT,WACI,UAACb,EAAD,0BAAwBS,MACxB,uCAAeC,UAJRF,EAFT,KAWrB,ECDD,EAnBa,WACT,IAAQA,GAAOM,EAAAA,EAAAA,MAAPN,GACR,GAAkCO,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAMA,IAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAoBX,GAAIY,KAAKH,EAChC,GAAE,CAACT,IAECQ,EAIL,OACI,SAAC3B,EAAA,EAAD,CAAKA,KAAG,EAACQ,EAAG,EAAGwB,aAAa,iBAA5B,UACI,SAAClB,EAAD,CAAUC,KAAMY,KAG3B,C,8LCtBYM,EAAW,mCAAG,0FAEvB,2FAFuB,kBAKAC,EAAAA,EAAAA,IAHvB,4FAFuB,cAKjBC,EALiB,yBAMhBA,EAASpB,KAAKqB,SANE,gCAQvBC,QAAQC,IAAR,MARuB,yDAAH,qDAYXC,EAAY,mCAAG,WAAMpB,GAAN,gFACpBqB,EADoB,6CACwBrB,EADxB,+DAIDe,EAAAA,EAAAA,IAAUM,GAJT,cAIlBL,EAJkB,yBAKjBA,EAASpB,MALQ,gCAOxBsB,QAAQC,IAAR,MAPwB,yDAAH,sDAWZR,EAAmB,mCAAG,WAAMX,GAAN,gFAC3BqB,EAD2B,6CACiBrB,EADjB,uEAIRe,EAAAA,EAAAA,IAAUM,GAJF,cAIzBL,EAJyB,yBAKxBA,EAASpB,KAAK0B,MALU,gCAO/BJ,QAAQC,IAAR,MAP+B,yDAAH,sDAWnBI,EAAmB,mCAAG,WAAMvB,GAAN,gFAC3BqB,EAD2B,6CACiBrB,EADjB,uEAIRe,EAAAA,EAAAA,IAAUM,GAJF,cAIzBL,EAJyB,yBAKxBA,EAASpB,KAAKqB,SALU,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,sDAWnBK,EAAe,mCAAG,WAAMC,GAAN,gFACvBJ,EADuB,kHAC0FI,EAD1F,iDAIJV,EAAAA,EAAAA,IAAUM,GAJN,cAIrBL,EAJqB,yBAKpBA,EAASpB,KAAKqB,SALM,gCAO3BC,QAAQC,IAAR,MAP2B,yDAAH,qD","sources":["components/Box.js","components/Cast/CastList.styled.js","components/Cast/CastList.jsx","components/Cast/Cast.jsx","services/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { layout, flexbox, space, border } from 'styled-system';\n\nexport const Box = styled('div')(layout, flexbox, space, border);\n","import styled from 'styled-components';\n\nexport const List = styled.ul``;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const ListItemImg = styled.img`\n  width: 128px;\n  height: auto;\n`;\n\nexport const ActorName = styled.p`\n  font-size: ${p => p.theme.fontSizes.pretitle};\n`;\n","import PropTypes from 'prop-types'\nimport { Box } from \"components/Box\"\nimport { List, ListItem, ListItemImg, ActorName } from \"./CastList.styled\"\n\nexport const CastList = ({ data }) => {\n\n    const getCorrectPhoto = (profile_path) => {\n        if (profile_path !== null) {\n            return `https://image.tmdb.org/t/p/w500${profile_path}`\n        } else {\n            return 'https://ht.ksdr1.net/wp-content/uploads/sites/3/2016/06/no-picture-available-icon-8.png'\n        }\n    }\n\n    return (\n        <List>\n            {data.map(({id, name, character, profile_path\n            }) =>\n                <ListItem key={id}>\n                    <ListItemImg src={getCorrectPhoto(profile_path)} loading=\"lazy\" />\n                    <Box ml={5}>\n                        <ActorName>Actor name: {name}</ActorName>\n                        <p>Character: {character}</p>\n                    </Box>\n                </ListItem>)}\n        </List>\n    )\n}\n\nCastList.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n        name: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired,\n        profile_path: PropTypes.string\n    }))\n}","import { Box } from \"components/Box\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieByIdCredits } from \"services/getMovies\";\nimport { CastList } from \"components/Cast/CastList\";\n\nconst Cast = () => {\n    const { id } = useParams();\n    const [movieCast, setMovieCast] = useState(null);\n\n    useEffect(() => {\n        getMovieByIdCredits(id).then(setMovieCast)\n    }, [id])\n\n    if (!movieCast) {\n        return;\n    }\n\n    return (\n        <Box Box p={4} borderBottom=\"3px solid grey\">\n            <CastList data={movieCast} />\n        </Box>\n    )\n}\n\nexport default Cast;","import axios from 'axios';\n\nexport const getTrending = async () => {\n  const URL =\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=23f45f5baa89ae7759719795711df22f';\n\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}?api_key=23f45f5baa89ae7759719795711df22f`;\n\n  try {\n    const response = await axios.get(URL);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByIdCredits = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=23f45f5baa89ae7759719795711df22f`;\n\n  try {\n    const response = await axios.get(URL);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByIdReviews = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=23f45f5baa89ae7759719795711df22f`;\n\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async value => {\n  const URL = `https://api.themoviedb.org/3/search/movie?api_key=23f45f5baa89ae7759719795711df22f&language=en-US&query=${value}&page=1&include_adult=false`;\n\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Box","styled","layout","flexbox","space","border","List","ListItem","p","theme","ListItemImg","ActorName","fontSizes","pretitle","CastList","data","getCorrectPhoto","profile_path","map","id","name","character","src","loading","ml","useParams","useState","movieCast","setMovieCast","useEffect","getMovieByIdCredits","then","borderBottom","getTrending","axios","response","results","console","log","getMovieById","URL","cast","getMovieByIdReviews","getSearchMovies","value"],"sourceRoot":""}